/*
	
  ******************************************************************************
  * @file 			( фаил ):   MCP41xxx.h
  * @brief 		( описание ):  	
  ******************************************************************************
  * @attention 	( внимание ):	author: Golinskiy Konstantin	e-mail: golinskiy.konstantin@gmail.com
  ******************************************************************************
  
*/

/*
	Potentiometer values for 10 kΩ, 50 kΩ and 100 kΩ
	
	последние три цифры означают его сопротивление ( всего три вида ):
	
	MCP41010 - 10 kOm	
	MCP41050 - 50 kOm
	MCP41100 - 100 kOm
	
	Сопротивление щётки (ползунка) — 52 Ом
	Напряжение питания от 2.7 В до 5.5 В
	Количество положений щётки — 256
	Температурный диапазон -40…+85 °C

*/

#ifndef _MCP41XXX_H
#define _MCP41XXX_H

#ifdef __cplusplus
extern "C" {
#endif

/* Includes ----------------------------------------------------------*/

#include "main.h"

	//========  SETUP  ===========================================================
		
		// указываем порт SPI для HAL -------------------
		
		#define 	MCP41XXX_SPI_HAL 		hspi1
		
		//-----------------------------------------------
			
		//--  ВНИМАНИЕ!!! обязательно дергать CS ( если просто притянуть к земле то потенциометр не работает ) ------------
		
		#define CS_PORT
		
		//----------------------------------------------------------------------------------------
		
		#ifdef CS_PORT
			#if defined (CS_GPIO_Port)
			#else
				#define CS_GPIO_Port    GPIOA
				#define CS_Pin			GPIO_PIN_14
			#endif
		#endif
		
		//----------------------------------------------------------------------------------------
		
	//===========================================================================
	
	
// при запуске потенциометра он выставляется в среднее значение ( тоже самое при его RESET )
// для отправки данных нужно отправить 16 бит информации ( 2 байта )
// 1 байт ето команда ( формируем из #define ) формат такой xxC1C0xxP1P0
// 2 байт ето само значение потенциометра от 0 до 255 
// движение происходит от PB0 до PA0

// регистры управления C1C0 ( отправляем что-то одно ) 
#define MCP41XXX_WRITE_DATA				0x10	// регистр для записи данных
#define MCP41XXX_OFF					0x20	// регистр для выключения

// регистры выбора потенциометра P1P0 ( бывают модели с одним и с двумя потенциометрами в одном корпусе )
#define MCP41XXX_POTENT_0				0x01	// 0 потенциометр выбран ( он же если всего один в корпусе )
#define MCP41XXX_POTENT_1				0x02	// 1 потенциометр выбран 
#define MCP41XXX_POTENT_0_AND_1			0x03	// оба потенциометра выбрано 



extern SPI_HandleTypeDef MCP41XXX_SPI_HAL;


// выбор потенциометра
typedef enum {
	POTENTIOMETER_ONE = 1,
	POTENTIOMETER_TWO,
	POTENTIOMETER_BOTH	
}Potentiometer;


/* Functions prototypes ----------------------------------------------*/


/*
	******************************************************************************
	* @brief	 ( описание ):  отправка данных в потенциометр 
								( от 0 до 255 -> движение происходит от PB0 до PA0 )
	* @param	( параметры ):	1 - номер потонциометра 
										POTENTIOMETER_ONE,POTENTIOMETER_TWO,POTENTIOMETER_BOTH
								2 - данные ( от 0 до 255 -> движение происходит от PB0 до PA0 )
	* @return  ( возвращает ):	

	******************************************************************************
*/
void MCP41xxx_sendValue( Potentiometer num, uint8_t value );
//------------------------------------------------------------------------------------

/*
	******************************************************************************
	* @brief	 ( описание ): 	отключает потенциометр потребление <1 мкА в статическом режиме
								сопротивление ползунка становится в самом начале к контакту PB0
	* @param	( параметры ):	номер потонциометра 
										POTENTIOMETER_ONE,POTENTIOMETER_TWO,POTENTIOMETER_BOTH
	* @return  ( возвращает ):	

	******************************************************************************
*/
void MCP41xxx_potentiometerOff( Potentiometer num );
//------------------------------------------------------------------------------------
	

#ifdef __cplusplus
}
#endif

#endif	/*	_MCP41XXX_H */

/************************ (C) COPYRIGHT GKP *****END OF FILE****/
